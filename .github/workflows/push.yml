name: Push

on:
  push:
    branches:
      - main

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        run: |
          echo "NAME=CountIt" >> $GITHUB_ENV
          echo "CF_PROJECT_ID=362766" >> $GITHUB_ENV
          echo "INTERFACE_RETAIL=90001" >> $GITHUB_ENV
          echo "GAME_VERSION_RETAIL=9.0.1" >> $GITHUB_ENV
          echo "INTERFACE_CLASSIC=11305" >> $GITHUB_ENV
          echo "GAME_VERSION_CLASSIC=1.13.5" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: luacheck
        uses: Jayrgo/luacheck-action@v1
      - name: Create changelog
        uses: TriPSs/conventional-changelog-action@v3
        id: changelog
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          preset: conventionalcommits
          release-count: 1
          skip-version-file: true
          pre-commit: .pre-commit.js
      - name: Create release
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        uses: actions/create-release@v1
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
      - name: "[retail] Create TOC"
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        run: |
          echo "$(tail -n +2 ${{ env.NAME }}.toc)" > ${{ env.NAME }}.toc
          echo '## Interface: ${{ env.INTERFACE_RETAIL }}'$'\n'"$( cat ${{ env.NAME }}.toc)" > ${{ env.NAME }}.toc
          git add ${{ env.NAME }}.toc
          git commit -m "chore: Release"
      - uses: Jayrgo/git-archive-all-action@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        with:
          output: "${{ env.NAME }}-${{ steps.changelog.outputs.tag }}.zip"
          args: --prefix "${{ env.NAME }}/"
      - name: "[retail] Upload archive"
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: "${{ env.NAME }}-${{ steps.changelog.outputs.tag }}.zip"
          asset_name: "${{ env.NAME }}-${{ steps.changelog.outputs.tag }}.zip"
          asset_content_type: application/zip
      - name: "[retail] Upload to CurseForge"
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        uses: itsmeow/curseforge-upload@v2
        with:
          token: ${{ secrets.CF_API_KEY }}
          project_id: ${{ env.CF_PROJECT_ID }}
          game_endpoint: wow
          file_path: "${{ env.NAME }}-${{ steps.changelog.outputs.tag }}.zip"
          changelog: ${{ steps.changelog.outputs.changelog }}
          changelog_type: markdown
          display_name: "${{ env.NAME }}-${{ steps.changelog.outputs.tag }}"
          game_versions: WoW:${{ env.GAME_VERSION_RETAIL }}
          release_type: release
      - name: "[retail] Delete archive"
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        run: |
          rm "${{ env.NAME }}-${{ steps.changelog.outputs.tag }}.zip"
      - name: "[classic] Create TOC"
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        run: |
          echo "$(tail -n +2 ${{ env.NAME }}.toc)" > ${{ env.NAME }}.toc
          echo '## Interface: ${{ env.INTERFACE_CLASSIC }}'$'\n'"$( cat ${{ env.NAME }}.toc)" > ${{ env.NAME }}.toc
          git add ${{ env.NAME }}.toc
          git commit -m "chore: Release"
      - uses: Jayrgo/git-archive-all-action@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        with:
          output: "${{ env.NAME }}-${{ steps.changelog.outputs.tag }}-classic.zip"
          args: --prefix "${{ env.NAME }}/"
      - name: "[classic] Upload archive"
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: "${{ env.NAME }}-${{ steps.changelog.outputs.tag }}-classic.zip"
          asset_name: "${{ env.NAME }}-${{ steps.changelog.outputs.tag }}-classic.zip"
          asset_content_type: application/zip
      - name: "[classic] Upload to CurseForge"
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        uses: itsmeow/curseforge-upload@v2
        with:
          token: ${{ secrets.CF_API_KEY }}
          project_id: ${{ env.CF_PROJECT_ID }}
          game_endpoint: wow
          file_path: "${{ env.NAME }}-${{ steps.changelog.outputs.tag }}-classic.zip"
          changelog: ${{ steps.changelog.outputs.changelog }}
          changelog_type: markdown
          display_name: "${{ env.NAME }}-${{ steps.changelog.outputs.tag }}-classic"
          game_versions: WoW:${{ env.GAME_VERSION_CLASSIC }}
          release_type: release
      - name: "[classic] Delete archive"
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        run: |
          rm "${{ env.NAME }}-${{ steps.changelog.outputs.tag }}-classic.zip"
